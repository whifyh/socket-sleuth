import burp.api.montoya.MontoyaApi;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import socketsleuth.intruder.executors.Sniper;
import socketsleuth.intruder.payloads.models.IPayloadModel;
import javax.swing.*;
import java.awt.*;
import java.util.Iterator;
import static burp.api.montoya.websocket.Direction.CLIENT_TO_SERVER;

public class QiangZhan {

    private JButton redButton;
    private JButton quitButton;
    private JButton blueButton;

    private JTextField redTextField;
    private JTextField quitTextField;
    private JTextField blueTextField;
    private JPanel jpanel;

    private Sniper executor;
    private MontoyaApi api;

    private IPayloadModel onceList = () -> new Iterator<>() {
        int i = 0;

        @Override
        public boolean hasNext() {
            return i == 0;
        }

        @Override
        public String next() {
            i = 1;
            return "";
        }
    };

    public JPanel getJpanel() {
        return jpanel;
    }

    public QiangZhan() {
        redButton.addActionListener(e -> executor.start(null, 0, onceList, redTextField.getText(), CLIENT_TO_SERVER, false, false, true));
        quitButton.addActionListener(e -> executor.start(null, 0, onceList, quitTextField.getText(), CLIENT_TO_SERVER, false, false, true));
        blueButton.addActionListener(e -> executor.start(null, 0, onceList, blueTextField.getText(), CLIENT_TO_SERVER, false, false, true));
    }

    public void setExecutor(Sniper executor) {
        this.executor = executor;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        jpanel = new JPanel();
        jpanel.setLayout(new GridLayoutManager(2, 3, new Insets(0, 0, 0, 0), -1, -1));
        redButton = new JButton();
        redButton.setText("Red");
        jpanel.add(redButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        quitButton = new JButton();
        quitButton.setText("Quit");
        jpanel.add(quitButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        blueButton = new JButton();
        blueButton.setText("Blue");
        jpanel.add(blueButton, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        redTextField = new JTextField();
        redTextField.setText("[1,368,4,[\"e\",\"11-3nkpMNF\",45427832,-1]]");
        jpanel.add(redTextField, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        quitTextField = new JTextField();
        quitTextField.setText("[1,368,4,[\"e\",\"11-3nkpMNF\",45427832,0]]");
        jpanel.add(quitTextField, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        blueTextField = new JTextField();
        blueTextField.setText("[1,368,4,[\"e\",\"11-3nkpMNF\",45427832,1]]");
        jpanel.add(blueTextField, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return jpanel;
    }
}
